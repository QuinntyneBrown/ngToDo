{"version":3,"sources":["app.base.ts"],"names":["app","app.DataService","app.DataService.constructor","app.DataService.fromCacheOrService"],"mappings":"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","file":"app.base.js","sourceRoot":"C:/Projects/ngToDo/ngToDo/","sourcesContent":["module app {\r\n\r\n    export class DataService implements IDataService {\r\n\r\n        constructor(\r\n            public $http: ng.IHttpService,\r\n            public $cacheFactory: ng.ICacheFactoryService,\r\n            public $q: ng.IQService,\r\n            public baseUri: string) {\r\n\r\n        }\r\n\r\n        public add = (options) => {\r\n\r\n            var deferred = this.$q.defer();\r\n\r\n            this.$http({ method: \"POST\", url: this.baseUri + \"add\", data: options.entity }).then((results) => {\r\n                deferred.resolve(results);\r\n            }).catch((error) => {\r\n                deferred.reject(error);\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        public update = (options) => {\r\n\r\n            var deferred = this.$q.defer();\r\n\r\n            this.$http({ method: \"POST\", url: this.baseUri + \"add\", data: options.entity }).then((results) => {\r\n                deferred.resolve(results);\r\n            }).catch((error) => {\r\n                deferred.reject(error);\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        public fromCacheOrService(action: IHttpAction, key: string) {\r\n\r\n            var deferred = this.$q.defer();\r\n\r\n            var dataCache = this.$cacheFactory.get(key);\r\n\r\n            if (!dataCache) {\r\n                this.$http({ method: \"GET\", url: this.baseUri + \"getAll\" }).then((results) => {\r\n                    deferred.resolve(results.data);\r\n                }).catch((error) => {\r\n                    deferred.reject(error);\r\n                });\r\n            } else {\r\n                deferred.resolve(dataCache);\r\n            }\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        public getById = (id: string) => {\r\n\r\n            var deferred = this.$q.defer();\r\n\r\n            this.$http({ method: \"GET\", url: this.baseUri + \"getbyid?id=\" + id }).then((results) => {\r\n                deferred.resolve(results);\r\n            }).catch((error) => {\r\n                deferred.reject(error);\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        public getAll = () => {\r\n\r\n            var deferred = this.$q.defer();\r\n\r\n            this.$http({ method: \"GET\", url: this.baseUri + \"getAll\" }).then((results) => {\r\n                deferred.resolve(results.data);\r\n            }).catch((error) => {\r\n                deferred.reject(error);\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        public remove = (id: string) => {\r\n\r\n            var deferred = this.$q.defer();\r\n\r\n            this.$http({ method: \"DELETE\", url: this.baseUri + \"remove?id=\" + id }).then((results) => {\r\n                deferred.resolve(results);\r\n            }).catch((error) => {\r\n                deferred.reject(error);\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        public deleteFromCache = (key: string) => {\r\n\r\n        }\r\n\r\n    }\r\n}"]}