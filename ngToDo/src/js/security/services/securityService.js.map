{"version":3,"sources":["security/services/securityService.ts"],"names":["app","app.security","app.security.SecurityService","app.security.SecurityService.constructor"],"mappings":"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","file":"security/services/securityService.js","sourceRoot":"C:/Projects/ngToDo/ngToDo/","sourcesContent":["module app.security {\r\n    \r\n    export class SecurityService implements ISecurityService {\r\n        \r\n        constructor(\r\n            public $http: ng.IHttpService,\r\n            public $interval: ng.IIntervalService, \r\n            public $location: ng.ILocationService,\r\n            public $q: ng.IQService,\r\n            public currentUser: common.ISessionStorageProperty,\r\n            public formEncode: common.IFormEncode,\r\n            public oauthEndpoint: common.IApiEndpointConfig,\r\n            public token: common.ISessionStorageProperty,\r\n            public tokenExpiryDate: common.ISessionStorageProperty) {\r\n\r\n        }\r\n\r\n        public login = (username: string, password: string) => {\r\n            var deferred = this.$q.defer();\r\n\r\n            var configuration = {\r\n                headers: {\r\n                    \"Content-Type\": \"application/x-www-form-urlencoded\"\r\n                }\r\n            };\r\n\r\n            var data = this.formEncode({\r\n                username: username,\r\n                password: password,\r\n                grant_type: \"password\"\r\n            });\r\n\r\n            this.$http.post(this.oauthEndpoint.baseUrl, data, configuration).then((response) => {\r\n                this.processToken(username, response).then((results) => {\r\n                    deferred.resolve(true);\r\n                });\r\n            }).catch((Error) => {\r\n                deferred.reject();\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        private processToken = (username: string, response: any) => {\r\n\r\n            var deferred = this.$q.defer();\r\n\r\n            this.token.set({ data: response.data.access_token });\r\n\r\n            this.tokenExpiryDate.set({ data: Date.now() + response.data.expires_in * 100 });\r\n\r\n            this.getCurrentUser().then((results) => {\r\n\r\n                this.currentUser.set({ data: results });\r\n                \r\n                deferred.resolve();\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n        \r\n        public getCurrentUser = () => {\r\n\r\n            var deferred = this.$q.defer();\r\n\r\n            this.$http({ method: \"GET\", url: \"/api/identity/getCurrentUser\" }).then((results) => {\r\n                deferred.resolve(results.data);\r\n            }).catch((error) => {\r\n                deferred.reject(error);\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        public tokenExpired = () => {\r\n            return Date.now() > this.tokenExpiryDate.get();\r\n        }\r\n    }\r\n\r\n    angular.module(\"app.security\").service(\"securityService\", [\"$http\", \"$interval\", \"$location\", \"$q\", \"currentUser\", \"formEncode\", \"oauthEndpoint\", \"token\",\"tokenExpiryDate\", SecurityService]);\r\n} "]}