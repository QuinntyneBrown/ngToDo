{"version":3,"sources":["security/services/securityService.ts"],"names":["app","app.security","app.security.SecurityService","app.security.SecurityService.constructor"],"mappings":"AAAA,IAAO,GAAG,CA+CT;AA/CD,WAAO,GAAG;IAACA,IAAAA,QAAQA,CA+ClBA;IA/CUA,WAAAA,QAAQA,EAACA,CAACA;QAEjBC,IAAaA,eAAeA;YAExBC,SAFSA,eAAeA,CAGbA,KAAsBA,EACtBA,EAAgBA,EAChBA,WAA2CA,EAC3CA,UAA8BA,EAC9BA,aAAwCA,EACxCA,KAAqCA;gBARpDC,iBA0CCA;gBAvCcA,UAAKA,GAALA,KAAKA,CAAiBA;gBACtBA,OAAEA,GAAFA,EAAEA,CAAcA;gBAChBA,gBAAWA,GAAXA,WAAWA,CAAgCA;gBAC3CA,eAAUA,GAAVA,UAAUA,CAAoBA;gBAC9BA,kBAAaA,GAAbA,aAAaA,CAA2BA;gBACxCA,UAAKA,GAALA,KAAKA,CAAgCA;gBAIzCA,UAAKA,GAAGA,UAACA,QAAgBA,EAAEA,QAAgBA;oBAC9CA,IAAIA,QAAQA,GAAGA,KAAIA,CAACA,EAAEA,CAACA,KAAKA,EAAEA,CAACA;oBAE/BA,IAAIA,aAAaA,GAAGA;wBAChBA,OAAOA,EAAEA;4BACLA,cAAcA,EAAEA,mCAAmCA;yBACtDA;qBACJA,CAACA;oBAEFA,IAAIA,IAAIA,GAAGA,KAAIA,CAACA,UAAUA,CAACA;wBACvBA,QAAQA,EAAEA,QAAQA;wBAClBA,QAAQA,EAAEA,QAAQA;wBAClBA,UAAUA,EAAEA,UAAUA;qBACzBA,CAACA,CAACA;oBAEHA,KAAIA,CAACA,KAAKA,CAACA,IAAIA,CAACA,KAAIA,CAACA,aAAaA,CAACA,OAAOA,EAAEA,IAAIA,EAAEA,aAAaA,CAACA,CAACA,IAAIA,CAACA,UAACA,QAAQA;wBAC3EA,KAAIA,CAACA,YAAYA,CAACA,QAAQA,EAAEA,QAAQA,CAACA,CAACA;wBACtCA,QAAQA,CAACA,OAAOA,CAACA,IAAIA,CAACA,CAACA;oBAC3BA,CAACA,CAACA,CAACA,KAAKA,CAACA,UAACA,KAAKA;wBACXA,QAAQA,CAACA,MAAMA,EAAEA,CAACA;oBACtBA,CAACA,CAACA,CAACA;oBAEHA,MAAMA,CAACA,QAAQA,CAACA,OAAOA,CAACA;gBAC5BA,CAACA,CAAAA;gBAEOA,iBAAYA,GAAGA,UAACA,QAAgBA,EAAEA,QAAaA;oBACnDA,IAAIA,WAAWA,GAAGA,EAAEA,QAAQA,EAAEA,QAAQA,EAAEA,CAACA;oBACzCA,KAAIA,CAACA,WAAWA,CAACA,GAAGA,CAACA,EAAEA,IAAIA,EAAEA,WAAWA,EAAEA,CAACA,CAACA;oBAC5CA,KAAIA,CAACA,KAAKA,CAACA,GAAGA,CAACA,EAAEA,IAAIA,EAAEA,QAAQA,CAACA,IAAIA,CAACA,YAAYA,EAAEA,CAACA,CAACA;gBACzDA,CAACA,CAAAA;YA/BDA,CAACA;YAgCLD,sBAACA;QAADA,CA1CAD,AA0CCC,IAAAD;QA1CYA,wBAAeA,GAAfA,eA0CZA,CAAAA;QAEDA,OAAOA,CAACA,MAAMA,CAACA,cAAcA,CAACA,CAACA,OAAOA,CAACA,iBAAiBA,EAAEA,CAACA,OAAOA,EAACA,IAAIA,EAACA,aAAaA,EAACA,YAAYA,EAACA,eAAeA,EAACA,OAAOA,EAAEA,eAAeA,CAACA,CAACA,CAACA;IAClJA,CAACA,EA/CUD,QAAQA,GAARA,YAAQA,KAARA,YAAQA,QA+ClBA;AAADA,CAACA,EA/CM,GAAG,KAAH,GAAG,QA+CT","file":"security/services/securityService.js","sourceRoot":"C:/Projects/ngToDo/ngToDo/","sourcesContent":["module app.security {\r\n    \r\n    export class SecurityService implements ISecurityService {\r\n        \r\n        constructor(\r\n            public $http: ng.IHttpService,\r\n            public $q: ng.IQService,\r\n            public currentUser: common.ISessionStorageProperty,\r\n            public formEncode: common.IFormEncode,\r\n            public oauthEndpoint: common.IApiEndpointConfig,\r\n            public token: common.ISessionStorageProperty) {\r\n            \r\n        }\r\n\r\n        public login = (username: string, password: string) => {\r\n            var deferred = this.$q.defer();\r\n\r\n            var configuration = {\r\n                headers: {\r\n                    \"Content-Type\": \"application/x-www-form-urlencoded\"\r\n                }\r\n            };\r\n\r\n            var data = this.formEncode({\r\n                username: username,\r\n                password: password,\r\n                grant_type: \"password\"\r\n            });\r\n\r\n            this.$http.post(this.oauthEndpoint.baseUrl, data, configuration).then((response) => {\r\n                this.processToken(username, response);\r\n                deferred.resolve(true);\r\n            }).catch((Error) => {\r\n                deferred.reject();\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        private processToken = (username: string, response: any) => {\r\n            var currentUser = { username: username };\r\n            this.currentUser.set({ data: currentUser });\r\n            this.token.set({ data: response.data.access_token });\r\n        }\r\n    }\r\n\r\n    angular.module(\"app.security\").service(\"securityService\", [\"$http\",\"$q\",\"currentUser\",\"formEncode\",\"oauthEndpoint\",\"token\", SecurityService]);\r\n} "]}