{"version":3,"sources":["common/services/requestCounter.ts"],"names":["app","app.common","app.common.RequestCounter","app.common.RequestCounter.constructor"],"mappings":"AAAA,IAAO,GAAG,CA+CT;AA/CD,WAAO,GAAG;IAACA,IAAAA,MAAMA,CA+ChBA;IA/CUA,WAAAA,MAAMA,EAACA,CAACA;QAEfC,YAAYA,CAACA;QAEbA,IAAMA,cAAcA;YAEhBC,SAFEA,cAAcA,CAEIA,EAAgBA;gBAFxCC,iBAmCCA;gBAjCuBA,OAAEA,GAAFA,EAAEA,CAAcA;gBAQ5BA,aAAQA,GAAWA,CAACA,CAACA;gBAEtBA,YAAOA,GAAGA,UAACA,MAAMA;oBACpBA,KAAIA,CAACA,QAAQA,IAAIA,CAACA,CAACA;oBACnBA,MAAMA,CAACA,KAAIA,CAACA,EAAEA,CAACA,IAAIA,CAACA,MAAMA,CAACA,CAACA;gBAChCA,CAACA,CAAAA;gBAEMA,iBAAYA,GAAGA,UAACA,KAAKA;oBACxBA,KAAIA,CAACA,QAAQA,IAAIA,CAACA,CAACA;oBACnBA,MAAMA,CAACA,KAAIA,CAACA,EAAEA,CAACA,MAAMA,CAACA,KAAKA,CAACA,CAACA;gBACjCA,CAACA,CAAAA;gBAEMA,aAAQA,GAAGA,UAACA,QAAQA;oBACvBA,KAAIA,CAACA,QAAQA,IAAIA,CAACA,CAACA;oBACnBA,MAAMA,CAACA,KAAIA,CAACA,EAAEA,CAACA,IAAIA,CAACA,QAAQA,CAACA,CAACA;gBAClCA,CAACA,CAAAA;gBAEMA,kBAAaA,GAAGA,UAACA,KAAKA;oBACzBA,KAAIA,CAACA,QAAQA,IAAIA,CAACA,CAACA;oBACnBA,MAAMA,CAACA,KAAIA,CAACA,EAAEA,CAACA,MAAMA,CAACA,KAAKA,CAACA,CAACA;gBACjCA,CAACA,CAAAA;gBAEMA,oBAAeA,GAAGA;oBACrBA,MAAMA,CAACA,KAAIA,CAACA,QAAQA,CAACA;gBACzBA,CAACA,CAAAA;YA9BDA,CAACA;YAEaD,uBAAQA,GAAGA,UAACA,EAAEA;gBACxBA,MAAMA,CAACA,IAAIA,cAAcA,CAACA,EAAEA,CAACA,CAACA;YAClCA,CAACA,CAAAA;YA2BLA,qBAACA;QAADA,CAnCAD,AAmCCC,IAAAD;QAEDA,OAAOA,CAACA,MAAMA,CAACA,YAAYA,CAACA,CAACA,OAAOA,CAACA,gBAAgBA,EAAEA,CAACA,IAAIA,EAAEA,cAAcA,CAACA,QAAQA,CAACA,CAACA,CAClFA,MAAMA,CAACA;YACRA,eAAeA;YAAEA,UAACA,aAAaA;gBAC3BA,aAAaA,CAACA,YAAYA,CAACA,IAAIA,CAACA,gBAAgBA,CAACA,CAACA;YACtDA,CAACA;SACJA,CAACA,CAACA;IACPA,CAACA,EA/CUD,MAAMA,GAANA,UAAMA,KAANA,UAAMA,QA+ChBA;AAADA,CAACA,EA/CM,GAAG,KAAH,GAAG,QA+CT","file":"common/services/requestCounter.js","sourceRoot":"C:/Projects/ngToDo/ngToDo/","sourcesContent":["module app.common {\r\n    \r\n    \"use strict\";\r\n\r\n    class RequestCounter implements IRequestCounter {\r\n\r\n        constructor(private $q: ng.IQService) {\r\n            \r\n        }\r\n\r\n        public static instance = ($q) => {\r\n            return new RequestCounter($q);\r\n        }\r\n\r\n        private requests: number = 0;\r\n\r\n        public request = (config) => {\r\n            this.requests += 1;\r\n            return this.$q.when(config);\r\n        }\r\n\r\n        public requestError = (error) => {\r\n            this.requests -= 1;\r\n            return this.$q.reject(error);\r\n        }\r\n\r\n        public response = (response) => {\r\n            this.requests -= 1;\r\n            return this.$q.when(response);\r\n        }\r\n\r\n        public responseError = (error) => {\r\n            this.requests -= 1;\r\n            return this.$q.reject(error);\r\n        }\r\n\r\n        public getRequestCount = () => {\r\n            return this.requests;\r\n        }\r\n    }\r\n\r\n    angular.module(\"app.common\").factory(\"requestCounter\", [\"$q\", RequestCounter.instance])\r\n        .config([\r\n        \"$httpProvider\", ($httpProvider) => {\r\n            $httpProvider.interceptors.push(\"requestCounter\");\r\n        }\r\n    ]);\r\n} "]}