{"version":3,"sources":["dataService.ts"],"names":["app","app.common","app.common.DataService","app.common.DataService.constructor","app.common.DataService.fromCacheOrService"],"mappings":"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","file":"dataService.js","sourceRoot":"C:/Projects/ngToDo/ngToDo/","sourcesContent":["module app.common {\r\n    \r\n    export class DataService implements IDataService {\r\n\r\n        constructor(\r\n            public $http: ng.IHttpService,\r\n            public $cacheFactory: ng.ICacheFactoryService,\r\n            public $q: ng.IQService,\r\n            public baseUri: string) {\r\n\r\n        }\r\n\r\n        public add = (entity) => {\r\n\r\n            var deferred = this.$q.defer();\r\n\r\n            this.$http({ method: \"POST\", url: this.baseUri + \"add\", data: entity }).then((results) => {\r\n                deferred.resolve(results);\r\n            }).catch((error) => {\r\n                deferred.reject(error);\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        public update = (entity) => {\r\n\r\n            var deferred = this.$q.defer();\r\n\r\n            this.$http({ method: \"PUT\", url: this.baseUri + \"update\", data: JSON.stringify(entity) }).then((results) => {\r\n                deferred.resolve(results);\r\n            }).catch((error) => {\r\n                deferred.reject(error);\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        public fromCacheOrService(action: IHttpAction, key: string) {\r\n\r\n            var deferred = this.$q.defer();\r\n\r\n            var dataCache = this.$cacheFactory.get(key);\r\n\r\n            if (!dataCache) {\r\n                this.$http({ method: \"GET\", url: this.baseUri + \"getAll\" }).then((results) => {\r\n                    deferred.resolve(results.data);\r\n                }).catch((error) => {\r\n                    deferred.reject(error);\r\n                });\r\n            } else {\r\n                deferred.resolve(dataCache);\r\n            }\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        public getById = (id: string) => {\r\n\r\n            var deferred = this.$q.defer();\r\n\r\n            this.$http({ method: \"GET\", url: this.baseUri + \"getbyid?id=\" + id }).then((results) => {\r\n                deferred.resolve(results);\r\n            }).catch((error) => {\r\n                deferred.reject(error);\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        public getAll = () => {\r\n\r\n            var deferred = this.$q.defer();\r\n\r\n            this.$http({ method: \"GET\", url: this.baseUri + \"getAll\" }).then((results) => {\r\n                deferred.resolve(results);\r\n            }).catch((error) => {\r\n                deferred.reject(error);\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        public remove = (id: string) => {\r\n\r\n            var deferred = this.$q.defer();\r\n\r\n            this.$http({ method: \"DELETE\", url: this.baseUri + \"remove?id=\" + id }).then((results) => {\r\n                deferred.resolve(results);\r\n            }).catch((error) => {\r\n                deferred.reject(error);\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        public deleteFromCache = (key: string) => {\r\n\r\n        }\r\n\r\n    }\r\n\r\n} "]}