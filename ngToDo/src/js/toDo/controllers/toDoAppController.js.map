{"version":3,"sources":["toDo/controllers/toDoAppController.ts"],"names":["app","app.toDo","app.toDo.ToDoAppController","app.toDo.ToDoAppController.constructor"],"mappings":"AAAA,IAAO,GAAG,CA8CT;AA9CD,WAAO,GAAG;IAACA,IAAAA,IAAIA,CA8CdA;IA9CUA,WAAAA,IAAIA,EAACA,CAACA;QAEbC,IAAaA,iBAAiBA;YAE1BC,SAFSA,iBAAiBA,CAGdA,SAA6BA,EAC7BA,SAA8BA,EACtCA,UAAgCA,EACzBA,OAAYA,EACZA,WAA0CA,EACjDA,MAA6BA,EAC7BA,eAA0CA,EACnCA,KAAqCA;gBAVpDC,iBAyCCA;gBAtCeA,cAASA,GAATA,SAASA,CAAoBA;gBAC7BA,cAASA,GAATA,SAASA,CAAqBA;gBAE/BA,YAAOA,GAAPA,OAAOA,CAAKA;gBACZA,gBAAWA,GAAXA,WAAWA,CAA+BA;gBAG1CA,UAAKA,GAALA,KAAKA,CAAgCA;gBAkBzCA,eAAUA,GAAGA;oBAChBA,MAAMA,CAACA,KAAIA,CAACA,KAAKA,CAACA,GAAGA,EAAEA,CAACA;gBAC5BA,CAACA,CAAAA;gBAEMA,gBAAWA,GAAGA;oBACjBA,IAAIA,WAAWA,GAAGA,KAAIA,CAACA,WAAWA,CAACA,GAAGA,EAAEA,CAACA;oBAEzCA,EAAEA,CAAAA,CAACA,WAAWA,CAACA;wBACXA,MAAMA,CAACA,WAAWA,CAACA,SAASA,GAAGA,GAAGA,GAAGA,WAAWA,CAACA,QAAQA,CAACA;oBAE9DA,MAAMA,CAACA,IAAIA,CAACA;gBAChBA,CAACA,CAAAA;gBA3BGA,OAAOA,CAACA,MAAMA,CAACA,MAAMA,CAACA,CAACA;gBAEvBA,SAASA,CAACA;oBACNA,EAAEA,CAACA,CAACA,eAAeA,CAACA,YAAYA,EAAEA,CAACA,CAACA,CAACA;wBAEjCA,AAMAA,iDANiDA;wBACjDA,wDAAwDA;wBACxDA,kCAAkCA;wBAClCA,GAAGA;wBAGHA,SAASA,CAACA,IAAIA,CAACA,QAAQA,CAACA,CAACA;oBAC7BA,CAACA;gBACLA,CAACA,EAAEA,IAAIA,CAACA,CAACA;YACbA,CAACA;YAeLD,wBAACA;QAADA,CAzCAD,AAyCCC,IAAAD;QAzCYA,sBAAiBA,GAAjBA,iBAyCZA,CAAAA;QAEDA,OAAOA,CAACA,MAAMA,CAACA,UAAUA,CAACA,CAACA,UAAUA,CAACA,mBAAmBA,EAAEA,CAACA,WAAWA,EAACA,WAAWA,EAAEA,YAAYA,EAAEA,SAASA,EAAEA,aAAaA,EAACA,QAAQA,EAAEA,iBAAiBA,EAAEA,OAAOA,EAAEA,iBAAiBA,CAACA,CAACA,CAACA;IAC1LA,CAACA,EA9CUD,IAAIA,GAAJA,QAAIA,KAAJA,QAAIA,QA8CdA;AAADA,CAACA,EA9CM,GAAG,KAAH,GAAG,QA8CT","file":"toDo/controllers/toDoAppController.js","sourceRoot":"C:/Projects/ngToDo/ngToDo/","sourcesContent":["module app.toDo {\r\n\r\n    export class ToDoAppController {\r\n\r\n        constructor(\r\n            private $interval:ng.IIntervalService,\r\n            private $location: ng.ILocationService,\r\n            $rootScope: ng.IRootScopeService,\r\n            public $router: any,\r\n            public currentUser:common.ISessionStorageProperty,\r\n            routes: common.IRouteConfig[],\r\n            securityService: security.ISecurityService,\r\n            public token: common.ISessionStorageProperty) {\r\n\r\n            $router.config(routes);\r\n\r\n            $interval(() => {\r\n                if (securityService.tokenExpired()) {\r\n\r\n                    //if(this.currentRouteRequiresAuthentication()) {\r\n                    //  this.loginRedirect.lastPath = this.$location.path();\r\n                    //  this.$location.path('/login');\r\n                    //}\r\n\r\n\r\n                    $location.path(\"/login\");\r\n                }\r\n            }, 6000);\r\n        }\r\n\r\n        public isLoggedIn = () => {\r\n            return this.token.get();\r\n        }\r\n\r\n        public getUsername = () => {\r\n            var currentUser = this.currentUser.get();\r\n\r\n            if(currentUser)\r\n                return currentUser.firstname + ' ' + currentUser.lastname;\r\n\r\n            return null;\r\n        }\r\n\r\n    }\r\n\r\n    angular.module(\"app.toDo\").controller(\"toDoAppController\", [\"$interval\",\"$location\", \"$rootScope\", \"$router\", \"currentUser\",\"routes\", \"securityService\", \"token\", ToDoAppController]);\r\n} "]}