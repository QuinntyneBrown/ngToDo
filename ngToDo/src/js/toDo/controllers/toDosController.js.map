{"version":3,"sources":["toDo/controllers/toDosController.ts"],"names":["app","app.toDo","app.toDo.ToDosController","app.toDo.ToDosController.constructor"],"mappings":";;;;;;AAAA,IAAO,GAAG,CAiCT;AAjCD,WAAO,GAAG;IAACA,IAAAA,IAAIA,CAiCdA;IAjCUA,WAAAA,KAAIA,EAACA,CAACA;QAEbC,YAAYA,CAACA;QAEbA,IAAMA,eAAeA;YAASC,UAAxBA,eAAeA,UAAsCA;YAEvDA,SAFEA,eAAeA,CAGNA,SAA8BA,EAC7BA,EAAgBA,EAChBA,IAAWA,EACZA,KAAqCA;gBANpDC,iBAyBCA;gBAlBOA,kBAAMA,SAASA,EAAEA,KAAKA,CAACA,CAACA;gBAJjBA,cAASA,GAATA,SAASA,CAAqBA;gBAC7BA,OAAEA,GAAFA,EAAEA,CAAcA;gBAChBA,SAAIA,GAAJA,IAAIA,CAAOA;gBACZA,UAAKA,GAALA,KAAKA,CAAgCA;gBAKzCA,aAAQA,GAAGA;oBACdA,IAAIA,QAAQA,GAAGA,KAAIA,CAACA,EAAEA,CAACA,KAAKA,EAAEA,CAACA;oBAE/BA,KAAIA,CAACA,IAAIA,CAACA,MAAMA,EAAEA,CAACA,IAAIA,CAACA,UAACA,OAAOA;wBAC5BA,KAAIA,CAACA,KAAKA,GAAGA,OAAOA,CAACA;wBACrBA,QAAQA,CAACA,OAAOA,CAACA,IAAIA,CAACA,CAACA;oBAC3BA,CAACA,CAACA,CAACA,KAAKA,CAACA,UAACA,KAAKA;wBACXA,QAAQA,CAACA,OAAOA,CAACA,KAAKA,CAACA,CAACA;oBAC5BA,CAACA,CAACA,CAACA;oBAEHA,MAAMA,CAACA,QAAQA,CAACA,OAAOA,CAACA;gBAC5BA,CAACA,CAAAA;YAbDA,CAACA;YAgBLD,sBAACA;QAADA,CAzBAD,AAyBCC,EAzB6BD,YAAQA,CAACA,oBAAoBA,EAyB1DA;QAEDA,OAAOA,CAACA,MAAMA,CAACA,UAAUA,CAACA,CACrBA,UAAUA,CAACA,iBAAiBA,EAAEA,CAACA,WAAWA,EAAEA,IAAIA,EAAEA,MAAMA,EAAEA,OAAOA,EAAEA,eAAeA,CAACA,CAACA,CAACA;IAC9FA,CAACA,EAjCUD,IAAIA,GAAJA,QAAIA,KAAJA,QAAIA,QAiCdA;AAADA,CAACA,EAjCM,GAAG,KAAH,GAAG,QAiCT","file":"toDo/controllers/toDosController.js","sourceRoot":"C:/Projects/ngToDo/ngToDo/","sourcesContent":["module app.toDo {\r\n\r\n    \"use strict\";\r\n\r\n    class ToDosController extends security.AuthorizedController {\r\n\r\n        constructor(\r\n            public $location: ng.ILocationService,\r\n            private $q: ng.IQService,\r\n            private toDo: IToDo,\r\n            public token: common.ISessionStorageProperty) {\r\n            super($location, token);\r\n\r\n        }\r\n\r\n        public activate = () => {\r\n            var deferred = this.$q.defer();\r\n\r\n            this.toDo.getAll().then((results) => {\r\n                this.toDos = results;\r\n                deferred.resolve(true);\r\n            }).catch((Error) => {\r\n                deferred.resolve(false);\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        public toDos: IToDo[];\r\n    }\r\n\r\n    angular.module(\"app.toDo\")\r\n        .controller(\"toDosController\", [\"$location\", \"$q\", \"toDo\", \"token\", ToDosController]);\r\n} "]}