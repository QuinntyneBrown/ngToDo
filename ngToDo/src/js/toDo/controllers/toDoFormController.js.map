{"version":3,"sources":["toDo/controllers/toDoFormController.ts"],"names":["app","app.toDo","app.toDo.ToDoFormController","app.toDo.ToDoFormController.constructor"],"mappings":"AAAA,IAAO,GAAG,CAwCT;AAxCD,WAAO,GAAG;IAACA,IAAAA,IAAIA,CAwCdA;IAxCUA,WAAAA,IAAIA,EAACA,CAACA;QAEbC,YAAYA,CAACA;QAEbA,IAAMA,kBAAkBA;YAEpBC,SAFEA,kBAAkBA,CAEAA,EAAgBA,EAAUA,WAAyBA,EAAUA,YAAYA;gBAFjGC,iBAgCCA;gBA9BuBA,OAAEA,GAAFA,EAAEA,CAAcA;gBAAUA,gBAAWA,GAAXA,WAAWA,CAAcA;gBAAUA,iBAAYA,GAAZA,YAAYA,CAAAA;gBAKtFA,gBAAWA,GAAGA;oBAEjBA,IAAIA,QAAQA,GAAGA,KAAIA,CAACA,EAAEA,CAACA,KAAKA,EAAEA,CAACA;oBAE/BA,EAAEA,CAACA,CAACA,KAAIA,CAACA,YAAYA,CAACA,MAAMA,CAACA,CAACA,CAACA;wBAE3BA,KAAIA,CAACA,WAAWA,CAACA,OAAOA,CAACA,KAAIA,CAACA,YAAYA,CAACA,MAAMA,CAACA,CAACA,IAAIA,CAACA,UAACA,OAAOA;4BAE5DA,KAAIA,CAACA,IAAIA,GAAGA,OAAOA,CAACA;4BAEpBA,QAAQA,CAACA,OAAOA,CAACA,IAAIA,CAACA,CAACA;wBAE3BA,CAACA,CAACA,CAACA,KAAKA,CAACA,UAACA,KAAKA;4BAEXA,QAAQA,CAACA,OAAOA,CAACA,KAAKA,CAACA,CAACA;wBAE5BA,CAACA,CAACA,CAACA;oBACPA,CAACA;oBAACA,IAAIA,CAACA,CAACA;wBACJA,QAAQA,CAACA,OAAOA,CAACA,IAAIA,CAACA,CAACA;oBAC3BA,CAACA;oBAEDA,MAAMA,CAACA,QAAQA,CAACA,OAAOA,CAACA;gBAC5BA,CAACA,CAAAA;YAxBDA,CAACA;YA2BLD,yBAACA;QAADA,CAhCAD,AAgCCC,IAAAD;QAEDA,OAAOA,CAACA,MAAMA,CAACA,UAAUA,CAACA,CACrBA,UAAUA,CAACA,oBAAoBA,EAAEA,CAACA,IAAIA,EAAEA,aAAaA,EAACA,cAAcA,EAAEA,kBAAkBA,CAACA,CAACA,CAACA;IACpGA,CAACA,EAxCUD,IAAIA,GAAJA,QAAIA,KAAJA,QAAIA,QAwCdA;AAADA,CAACA,EAxCM,GAAG,KAAH,GAAG,QAwCT","file":"toDo/controllers/toDoFormController.js","sourceRoot":"C:/Projects/ngToDo/ngToDo/","sourcesContent":["module app.toDo {\r\n\r\n    \"use strict\";\r\n\r\n    class ToDoFormController implements IToDoFormController {\r\n\r\n        constructor(private $q: ng.IQService, private toDoService: IToDoService, private $routeParams) {\r\n\r\n\r\n        }\r\n\r\n        public canActivate = () => {\r\n\r\n            var deferred = this.$q.defer();\r\n\r\n            if (this.$routeParams.toDoId) {\r\n\r\n                this.toDoService.getById(this.$routeParams.toDoId).then((results) => {\r\n\r\n                    this.toDo = results;\r\n\r\n                    deferred.resolve(true);\r\n\r\n                }).catch((Error) => {\r\n\r\n                    deferred.resolve(false);\r\n\r\n                });\r\n            } else {\r\n                deferred.resolve(true);\r\n            }\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        public toDo: IToDo;\r\n    }\r\n\r\n    angular.module(\"app.toDo\")\r\n        .controller(\"ToDoFormController\", [\"$q\", \"toDoService\",\"$routeParams\", ToDoFormController]);\r\n} "]}