{"version":3,"sources":["toDo/controllers/toDoFormController.ts"],"names":["app","app.toDo","app.toDo.ToDoFormController","app.toDo.ToDoFormController.constructor"],"mappings":";;;;;;AACA,IAAO,GAAG,CA6CT;AA7CD,WAAO,GAAG;IAACA,IAAAA,IAAIA,CA6CdA;IA7CUA,WAAAA,IAAIA,EAACA,CAACA;QAEbC,YAAYA,CAACA;QAEbA,IAAMA,kBAAkBA;YAASC,UAA3BA,kBAAkBA,UAAyCA;YAE7DA,SAFEA,kBAAkBA,CAGTA,SAA6BA,EAC5BA,EAAgBA,EAChBA,YAAYA,EACZA,WAAyBA,EAC1BA,KAAqCA;gBAPpDC,iBAqCCA;gBA7BOA,kBAAMA,SAASA,EAACA,KAAKA,CAACA,CAACA;gBALhBA,cAASA,GAATA,SAASA,CAAoBA;gBAC5BA,OAAEA,GAAFA,EAAEA,CAAcA;gBAChBA,iBAAYA,GAAZA,YAAYA,CAAAA;gBACZA,gBAAWA,GAAXA,WAAWA,CAAcA;gBAC1BA,UAAKA,GAALA,KAAKA,CAAgCA;gBAKzCA,aAAQA,GAAGA;oBAEdA,IAAIA,QAAQA,GAAGA,KAAIA,CAACA,EAAEA,CAACA,KAAKA,EAAEA,CAACA;oBAE/BA,EAAEA,CAACA,CAACA,KAAIA,CAACA,YAAYA,CAACA,MAAMA,CAACA,CAACA,CAACA;wBAE3BA,KAAIA,CAACA,WAAWA,CAACA,OAAOA,CAACA,KAAIA,CAACA,YAAYA,CAACA,MAAMA,CAACA,CAACA,IAAIA,CAACA,UAACA,OAAOA;4BAE5DA,KAAIA,CAACA,IAAIA,GAAGA,OAAOA,CAACA;4BAEpBA,QAAQA,CAACA,OAAOA,CAACA,IAAIA,CAACA,CAACA;wBAE3BA,CAACA,CAACA,CAACA,KAAKA,CAACA,UAACA,KAAKA;4BAEXA,QAAQA,CAACA,OAAOA,CAACA,KAAKA,CAACA,CAACA;wBAE5BA,CAACA,CAACA,CAACA;oBACPA,CAACA;oBAACA,IAAIA,CAACA,CAACA;wBACJA,QAAQA,CAACA,OAAOA,CAACA,IAAIA,CAACA,CAACA;oBAC3BA,CAACA;oBAEDA,MAAMA,CAACA,QAAQA,CAACA,OAAOA,CAACA;gBAC5BA,CAACA,CAAAA;YAxBDA,CAACA;YA2BLD,yBAACA;QAADA,CArCAD,AAqCCC,EArCgCD,YAAQA,CAACA,uBAAuBA,EAqChEA;QAEDA,OAAOA,CAACA,MAAMA,CAACA,UAAUA,CAACA,CACrBA,UAAUA,CAACA,oBAAoBA,EAAEA,CAACA,WAAWA,EAACA,IAAIA,EAACA,cAAcA,EAAEA,aAAaA,EAACA,OAAOA,EAAEA,kBAAkBA,CAACA,CAACA,CAACA;IACxHA,CAACA,EA7CUD,IAAIA,GAAJA,QAAIA,KAAJA,QAAIA,QA6CdA;AAADA,CAACA,EA7CM,GAAG,KAAH,GAAG,QA6CT","file":"toDo/controllers/toDoFormController.js","sourceRoot":"C:/Projects/ngToDo/ngToDo/","sourcesContent":["\r\nmodule app.toDo {\r\n\r\n    \"use strict\";\r\n\r\n    class ToDoFormController extends security.AuthenticatedController {\r\n\r\n        constructor(\r\n            public $location:ng.ILocationService,\r\n            private $q: ng.IQService,            \r\n            private $routeParams,\r\n            private toDoService: IToDoService,\r\n            public token: common.ISessionStorageProperty) {\r\n            super($location,token);\r\n\r\n        }\r\n\r\n        public activate = () => {\r\n\r\n            var deferred = this.$q.defer();\r\n\r\n            if (this.$routeParams.toDoId) {\r\n\r\n                this.toDoService.getById(this.$routeParams.toDoId).then((results) => {\r\n\r\n                    this.toDo = results;\r\n\r\n                    deferred.resolve(true);\r\n\r\n                }).catch((Error) => {\r\n\r\n                    deferred.resolve(false);\r\n\r\n                });\r\n            } else {\r\n                deferred.resolve(true);\r\n            }\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        public toDo: IToDo;\r\n    }\r\n\r\n    angular.module(\"app.toDo\")\r\n        .controller(\"ToDoFormController\", [\"$location\",\"$q\",\"$routeParams\", \"toDoService\",\"token\", ToDoFormController]);\r\n} "]}