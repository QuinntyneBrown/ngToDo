{"version":3,"sources":["toDo/services/toDoBreezeService.ts"],"names":["app","app.toDo","app.toDo.ToDoBreezeService","app.toDo.ToDoBreezeService.constructor"],"mappings":"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","file":"toDo/services/toDoBreezeService.js","sourceRoot":"C:/Projects/ngToDo/ngToDo/","sourcesContent":["module app.toDo {\r\n\r\n    \"use strict\";\r\n\r\n    class ToDoBreezeService implements IToDoService {\r\n        constructor(private $q: ng.IQService) {\r\n            breeze.config.initializeAdapterInstance('modelLibrary', 'backingStore', true);\r\n            breeze.NamingConvention.camelCase.setAsDefault();\r\n            this.entityManager = new breeze.EntityManager(\"breeze/breezedataservice\");\r\n        }\r\n\r\n        public getAll = () => {\r\n\r\n            var deferred = this.$q.defer();\r\n            var query = new breeze.EntityQuery().from(\"todos\");\r\n\r\n            query.using(this.entityManager).execute().then((results: any) => {\r\n                results.data = results.results;\r\n                deferred.resolve(results);\r\n            }).catch((error) => {\r\n\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        public getById = (id: any) => {\r\n            var deferred = this.$q.defer();\r\n\r\n            id = Math.floor(id);\r\n\r\n            var query = new breeze.EntityQuery()\r\n                .from('todos')\r\n                .where('id', '==', <number>id);\r\n\r\n            query.using(this.entityManager).execute().then((results: any) => {\r\n                results.data = results.results[0];\r\n                deferred.resolve(results);\r\n            }).catch((error) => {\r\n\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        public getRecent = () => {\r\n            var deferred = this.$q.defer();\r\n            var query = new breeze.EntityQuery().from(\"todos\");\r\n\r\n            query.using(this.entityManager).execute().then((results:any) => {\r\n                results.data = results.results;\r\n                deferred.resolve(results);\r\n            }).catch((error) => {\r\n\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        public remove = (id: any) => {\r\n            var deferred = this.$q.defer();\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        public add = (entity: IToDo) => {\r\n            var deferred = this.$q.defer();\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        public update =(entity: IToDo) => {\r\n            var deferred = this.$q.defer();\r\n            this.entityManager.saveChanges();\r\n            return deferred.promise;\r\n        }\r\n\r\n        private entityManager: breeze.EntityManager;\r\n    }\r\n\r\n    //angular.module(\"app.toDo\").service(\"toDoService\", [\"$q\", ToDoBreezeService]);\r\n} "]}